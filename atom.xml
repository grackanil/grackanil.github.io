<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Grac Kanil</title>
  
  <subtitle>「默默擦亮手里的武器，准备下一次的战斗。」</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://grackanil.top/"/>
  <updated>2018-01-01T15:48:00.544Z</updated>
  <id>http://grackanil.top/</id>
  
  <author>
    <name>Grac Kanil</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Tutorial - 基本搭建和配置</title>
    <link href="http://grackanil.top/2017/12/29/hexo-tutorial/"/>
    <id>http://grackanil.top/2017/12/29/hexo-tutorial/</id>
    <published>2017-12-29T11:42:09.221Z</published>
    <updated>2018-01-01T15:48:00.544Z</updated>
    
    <content type="html"><![CDATA[<!-- <div class="note success"></div> –&gt;<!-- defaultprimarysuccessinfowarningdanger --><p><img src="http://oxwk2uou0.bkt.clouddn.com/Taipei%20in%20a%20Nutshell.jpg" class="full-image"><br>记录一次 Hexo 从零开始搭建的历程。<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很早就了解到可以通过 GitHub 托管静态网页，使用 Hexo 和 GitHub Pages 方便快捷地搭建个人博客网站，也一直想通过一种方式整理和管理知识，遂从零开始搭建、配置属于自己的博客网站。</p><h2 id="注册-GitHub"><a href="#注册-GitHub" class="headerlink" title="注册 GitHub"></a>注册 GitHub</h2><p><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> 是一个面向开源及私有软件项目的托管平台。最好最详细的教程是 <a href="https://guides.github.com/activities/hello-world/" target="_blank" rel="noopener">官方文档</a> 望多查阅。以下是我简要说明，有错误还望指正包涵。</p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_login.png" alt="GitHub Register"></p><h3 id="验证邮箱"><a href="#验证邮箱" class="headerlink" title="验证邮箱"></a>验证邮箱</h3><p>登录注册邮箱，验证账号。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_login_5.png" alt="验证邮箱"></p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_login_3.png" alt="创建仓库"><br><img src="http://oxwk2uou0.bkt.clouddn.com/github_login_4.png" alt="创建完成"></p><h3 id="通过-SSH-建立连接，详见-文档-，使用-SSH-协议，每次访问可以无需用户名和密码连接-GitHub-。"><a href="#通过-SSH-建立连接，详见-文档-，使用-SSH-协议，每次访问可以无需用户名和密码连接-GitHub-。" class="headerlink" title="通过 SSH 建立连接，详见 文档 ，使用 SSH 协议，每次访问可以无需用户名和密码连接 GitHub 。"></a>通过 SSH 建立连接，详见 <a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="noopener">文档</a> ，使用 SSH 协议，每次访问可以无需用户名和密码连接 GitHub 。</h3><h4 id="检查是否已经存在-SSH-keys"><a href="#检查是否已经存在-SSH-keys" class="headerlink" title="检查是否已经存在 SSH keys"></a>检查是否已经存在 SSH keys</h4><p>打开终端，使用<code>ls -al ~/.ssh</code>查看，如果在<code>.ssh</code>目录下存在文件列表，说明已经存在 SSH keys 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al ~/.ssh</span><br><span class="line">total 24</span><br><span class="line">drwx------    5 gekang  staff   160  9 26 10:03 .</span><br><span class="line">drwxr-xr-x+ 115 gekang  staff  3680 12 31 14:04 ..</span><br><span class="line">-rw-------    1 gekang  staff  1675  9  8 19:59 id_rsa</span><br><span class="line">-rw-------    1 gekang  staff   398  9  8 19:59 id_rsa.pub</span><br><span class="line">-rw-r--r--    1 gekang  staff  2178 12 27 23:30 known_hosts</span><br></pre></td></tr></table></figure></p><h4 id="如果没有-public-key-，生成-SSH；如果已经有了，直接配置即可"><a href="#如果没有-public-key-，生成-SSH；如果已经有了，直接配置即可" class="headerlink" title="如果没有 public key ，生成 SSH；如果已经有了，直接配置即可"></a>如果没有 public key ，生成 SSH；如果已经有了，直接配置即可</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen -t rsa -C "yourmail@xxx.com"</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">&lt;!-- 直接输入回车即可 --&gt;</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):</span><br></pre></td></tr></table></figure><p>要求输入密码，可以一路回车。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:Kf8+luLAnbCkfUxraCX88K9x4WJHqym+WItUPr5sr yourmail@xxx.com</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|    o +          |</span></span><br><span class="line"><span class="string">|   . B . .       |</span></span><br><span class="line"><span class="string">|  + o X S        |</span></span><br><span class="line"><span class="string">|  .* S @ o       |</span></span><br><span class="line"><span class="string">| .o.= @ O  .     |</span></span><br><span class="line"><span class="string">| o+B = =..+      |</span></span><br><span class="line"><span class="string">|.+E+. ...+o.     |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure></p><h4 id="配置-SSH"><a href="#配置-SSH" class="headerlink" title="配置 SSH"></a>配置 SSH</h4><ul><li>找到 id_rsa.pub 中的 public key ，位置如上路径，复制出 public key。<br>复制 public key 时，不要重起一行，添加空格，可以使用<code>pbcopy &lt; ~/.ssh/id_rsa.pub</code>复制到剪贴板</li><li>进入 GitHub Setting 页面，配置 SSH。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_ssh_3.png" alt="配置SSH"></li><li>创建 SSH ，title 任意输入，粘贴 public key ，然后 Add SSH key。</li></ul><h4 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>可能看到警告：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (IP ADDRESS)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (IP ADDRESS)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>验证 fingerprint ,然后 type yes<br>然后，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not</span></span><br><span class="line"><span class="string">provide shell access.</span></span><br></pre></td></tr></table></figure></p><h2 id="简述-GitHub-Pages"><a href="#简述-GitHub-Pages" class="headerlink" title="简述 GitHub Pages"></a>简述 GitHub Pages</h2><p><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>是 GitHub 提供的一个静态网站托管服务。同样，<a href="https://help.github.com/categories/github-pages-basics/" target="_blank" rel="noopener">官方文档</a>是最好的教程。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_1.png" alt="官网首页"></p><h3 id="GitHub-Pages-可以用为两种类型：用户或组织主页；项目工程主页。"><a href="#GitHub-Pages-可以用为两种类型：用户或组织主页；项目工程主页。" class="headerlink" title="GitHub Pages 可以用为两种类型：用户或组织主页；项目工程主页。"></a>GitHub Pages 可以用为两种类型：用户或组织主页；项目工程主页。</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_7.png" alt="类型"></p><h3 id="搭建个人主页，以username-github-io名创建仓库"><a href="#搭建个人主页，以username-github-io名创建仓库" class="headerlink" title="搭建个人主页，以username.github.io名创建仓库"></a>搭建个人主页，以<code>username.github.io</code>名创建仓库</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_2.png" alt="搭建个人主页"></p><h3 id="克隆仓库到本地"><a href="#克隆仓库到本地" class="headerlink" title="克隆仓库到本地"></a>克隆仓库到本地</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_3.png" alt="克隆仓库"></p><h3 id="本地编辑个人静态主页"><a href="#本地编辑个人静态主页" class="headerlink" title="本地编辑个人静态主页"></a>本地编辑个人静态主页</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_4.png" alt="克隆仓库"></p><h3 id="Push-到远程仓库。"><a href="#Push-到远程仓库。" class="headerlink" title="Push 到远程仓库。"></a>Push 到远程仓库。</h3><p>此处说明，若使用 SSH ，创建 GitHub 已建立 SSH 连接，可以直接 Push；若无，建立连接，或者使用 Https 推送到远程仓库，其间需要输入用户名和密码。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_5.png" alt="克隆仓库"></p><h3 id="以上若都成功，访问个人主页，https-username-github-io"><a href="#以上若都成功，访问个人主页，https-username-github-io" class="headerlink" title="以上若都成功，访问个人主页，https://username.github.io."></a>以上若都成功，访问个人主页，<code>https://username.github.io.</code></h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_6.png" alt="克隆仓库"></p><h2 id="域名注册、绑定"><a href="#域名注册、绑定" class="headerlink" title="域名注册、绑定"></a>域名注册、绑定</h2><p>我的个人主页是万网注册的域名，所以简述<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">万网</a>域名购买和绑定。同样也有很详细的<a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/" target="_blank" rel="noopener">文档</a></p><h3 id="注册登录阿里云"><a href="#注册登录阿里云" class="headerlink" title="注册登录阿里云"></a>注册登录<a href="https://www.aliyun.com" target="_blank" rel="noopener">阿里云</a></h3><h3 id="购买域名，进入控制中心"><a href="#购买域名，进入控制中心" class="headerlink" title="购买域名，进入控制中心"></a>购买域名，进入控制中心</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_domain_name.png" alt="控制中心"></p><h3 id="管理域名，添加域名解析"><a href="#管理域名，添加域名解析" class="headerlink" title="管理域名，添加域名解析"></a>管理域名，添加域名解析</h3><p>GitHub 推荐使用 www 的二级域名，给域名添加解析，记录类型都是 A 记录，记录值全部对应刚才 ping 出来的 IP 。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_cname.png" alt="设置域名解析"></p><h3 id="添加CNAME文件到github仓库"><a href="#添加CNAME文件到github仓库" class="headerlink" title="添加CNAME文件到github仓库"></a>添加CNAME文件到github仓库</h3><p>由于<code>hexo d</code>部署时，依据<code>.gitignore</code>文件，会清除所有文件，所以如要将 CNAME 部署到 GitHub 中，必须将 CNAME 放置 source 文件夹中（可以放在后面 Hexo 安装后，初始化项目中 source 目录下）。CNAME 文件中是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 域名为grackanil.top</span></span><br><span class="line"><span class="comment"># 二级域名</span></span><br><span class="line">www.grackanil.top</span><br><span class="line"><span class="comment"># 一级域名</span></span><br><span class="line">grackanil.top</span><br></pre></td></tr></table></figure></p><h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>安装 Hexo 相当简单。<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a></p><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><h4 id="如果安装了-Node-js-和-Git，只需要使用-npm-即可完成-Hexo-的安装"><a href="#如果安装了-Node-js-和-Git，只需要使用-npm-即可完成-Hexo-的安装" class="headerlink" title="如果安装了 Node.js 和 Git，只需要使用 npm 即可完成 Hexo 的安装"></a>如果安装了 <code>Node.js</code> 和 <code>Git</code>，只需要使用 <code>npm</code> 即可完成 <code>Hexo</code> 的安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="如果没有安装-Node-js-和-Git，以下均为-Mac-环境下。"><a href="#如果没有安装-Node-js-和-Git，以下均为-Mac-环境下。" class="headerlink" title="如果没有安装 Node.js 和 Git，以下均为 Mac 环境下。"></a>如果没有安装 <code>Node.js</code> 和 <code>Git</code>，以下均为 Mac 环境下。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 brew 安装 git</span></span><br><span class="line">brew install git</span><br><span class="line"><span class="comment"># 可以使用 cURL 安装 nvm</span></span><br><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class="line"><span class="comment"># 也可以 使用 Wget 安装 nvm</span></span><br><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class="line"><span class="comment"># 使用最佳安装方式：nvm 安装 Node.js</span></span><br><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化-Hexo-建站"><a href="#初始化-Hexo-建站" class="headerlink" title="初始化 Hexo 建站"></a>初始化 Hexo 建站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化 Hexo，会在目标文件夹建立网站所需要的所有文件</span></span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">$ npm install</span><br><span class="line"><span class="comment"># 查看项目第一层目录</span></span><br><span class="line">$ tree -L 1</span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">├── themes</span><br><span class="line">└── yarn.lock</span><br><span class="line"><span class="comment"># 更改后清除静态文件夹的内容并删掉</span></span><br><span class="line">$ hexo clean </span><br><span class="line"><span class="comment"># 本地启动服务</span></span><br><span class="line"><span class="comment"># hexo generate ，生成静态文件到 public 文件夹</span></span><br><span class="line">$ hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">...</span><br><span class="line">INFO  Generated: 2018/01/01/hello-world/index.html</span><br><span class="line">INFO  28 files generated <span class="keyword">in</span> 916 ms</span><br><span class="line"><span class="comment"># hexo server，在本地服务器运行</span></span><br><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><h3 id="访问-http-localhost-4000"><a href="#访问-http-localhost-4000" class="headerlink" title="访问 http://localhost:4000/"></a>访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/hexo_1.png" alt="预览"></p><h3 id="部署到-GitHub，前提是已经注册-GitHub，创建-username-github-io-仓库"><a href="#部署到-GitHub，前提是已经注册-GitHub，创建-username-github-io-仓库" class="headerlink" title="部署到 GitHub，前提是已经注册 GitHub，创建 username.github.io 仓库"></a>部署到 GitHub，前提是已经注册 <code>GitHub</code>，创建 <code>username.github.io</code> 仓库</h3><h4 id="安装-GitHub-依赖插件"><a href="#安装-GitHub-依赖插件" class="headerlink" title="安装 GitHub 依赖插件"></a>安装 GitHub 依赖插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="配置更目录下的-config-yml文件"><a href="#配置更目录下的-config-yml文件" class="headerlink" title="配置更目录下的 _config.yml文件"></a>配置更目录下的 <code>_config.yml</code>文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: ssh://git@github.com/grackanil/grackanil.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="部署命令"><a href="#部署命令" class="headerlink" title="部署命令"></a>部署命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署，hexo deploy</span></span><br><span class="line">$ hexo d</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h3 id="访问个人主页"><a href="#访问个人主页" class="headerlink" title="访问个人主页"></a>访问个人主页</h3><p>访问 username.github.io，如 grackanil.github.io，根目录 <code>source</code> 下已经创建<code>CNAME</code>，绑定自定义域名，可以访问域名。</p><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>Hexo 安装主题很方便，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。以安装NexT为例，可以访问<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT主题文档</a>。</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入站点目录</span></span><br><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line"><span class="comment"># checkout 代码</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="修改站点配置目录"><a href="#修改站点配置目录" class="headerlink" title="修改站点配置目录"></a>修改站点配置目录</h3><p>根目录下的<code>站点配置文件</code> <strong>config.yml，区别于主题目录下的<code>主题配置文件</code></strong>config.yml。启动主题<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>使用 <code>hexo clean</code> 来清除 Hexo 的缓存，启动服务 <code>hexo s --debug</code>，待成功后，访问<code>http://localhost:4000</code></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>至此，简单的 NexT 默认配置主题的 Hexo 静态个人主页就搭建完成了。</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;div class=&quot;note success&quot;&gt;&lt;/div&gt; –&amp;gt;
&lt;!-- default
primary
success
info
warning
danger --&gt;
&lt;p&gt;&lt;img src=&quot;http://oxwk2uou0.bkt.clouddn.com/Taipei%20in%20a%20Nutshell.jpg&quot; class=&quot;full-image&quot;&gt;&lt;br&gt;记录一次 Hexo 从零开始搭建的历程。&lt;br&gt;
    
    </summary>
    
      <category term="tutorial" scheme="http://grackanil.top/categories/tutorial/"/>
    
    
      <category term="hexo" scheme="http://grackanil.top/tags/hexo/"/>
    
      <category term="tutorial" scheme="http://grackanil.top/tags/tutorial/"/>
    
  </entry>
  
</feed>
