<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Grac Kanil</title>
  
  <subtitle>「默默擦亮手里的武器，准备下一次的战斗。」</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://grackanil.top/"/>
  <updated>2018-01-03T13:30:44.433Z</updated>
  <id>http://grackanil.top/</id>
  
  <author>
    <name>Grac Kanil</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Tutorial - NexT 主题配置和第三方服务</title>
    <link href="http://grackanil.top/2018/01/03/hexo-theme-tutorial/"/>
    <id>http://grackanil.top/2018/01/03/hexo-theme-tutorial/</id>
    <published>2018-01-03T13:30:44.000Z</published>
    <updated>2018-01-03T13:30:44.433Z</updated>
    
    <content type="html"><![CDATA[<!-- <div class="note success"></div> –&gt;<!-- defaultprimarysuccessinfowarningdanger --><p><img src="http://oxwk2uou0.bkt.clouddn.com/hexo_ZMcLVBi9xx4.jpg" class="full-image"><br>简谈 NexT 主题的配置和第三方的服务的接入。<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前一篇完成了简单个人主页的搭建，然而，追求美的脚步和好奇心的滋生，难以遏制。</p><h2 id="NexT-主题配置"><a href="#NexT-主题配置" class="headerlink" title="NexT 主题配置"></a>NexT 主题配置</h2><p><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">NexT 主题配置官网文档</a>，有详尽的配置，如设置 RSS、设置字体、设置代码高亮主题、侧边栏社交链接、开启打赏功能、友情链接、腾讯公益404等。</p><h3 id="添加标签页面"><a href="#添加标签页面" class="headerlink" title="添加标签页面"></a>添加标签页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入站点根目录</span></span><br><span class="line"><span class="variable">$cd</span> your-hexo-site</span><br><span class="line"><span class="comment"># 新建名为 tags 的页面</span></span><br><span class="line"><span class="variable">$hexo</span> new page tags</span><br></pre></td></tr></table></figure><p>打开新建 tags 页面，将类型设为 tags。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2017-12-30 12:39:04</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line"><span class="comment"># 如果集成了评论服务，在标签页禁用该功能</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>编辑主题配置文件， 添加 tags 到 menu 中。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure></p><p>包含标签的文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 标签测试文章</span><br><span class="line">tags:</span><br><span class="line">    - Testing</span><br><span class="line">    - Another Tag</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h3 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入站点根目录</span></span><br><span class="line"><span class="variable">$cd</span> your-hexo-site</span><br><span class="line"><span class="comment"># 新建名为 categories 的页面</span></span><br><span class="line"><span class="variable">$hexo</span> new page categories</span><br></pre></td></tr></table></figure><p>打开新建 categories 页面，将类型设为 categories。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2017-12-30 12:39:04</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line"><span class="comment"># 如果集成了评论服务，在分类页禁用该功能</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>编辑主题配置文件， 添加 categories 到 menu 中。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br><span class="line">  categories: /categories</span><br></pre></td></tr></table></figure></p><p>包含分类的文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类测试文章</span><br><span class="line">categories: Testing</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h3 id="添加-RSS-订阅"><a href="#添加-RSS-订阅" class="headerlink" title="添加 RSS 订阅"></a>添加 RSS 订阅</h3><p>因为已经有成熟的依赖模块，所以添加 RSS 订阅很简单，进入<code>站点目录</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p><p>然后在<code>主题配置目录</code>配置文件中修改 RSS 配置，参见注释。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line">rss:</span><br></pre></td></tr></table></figure></p><p>在<code>站点目录</code>配置文件中，添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  <span class="built_in">limit</span>: 20</span><br></pre></td></tr></table></figure></p><p>The last but not least，在<code>站点目录</code>配置文件中，配置 URL 为自己网站的地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: http://grackanil.top</span><br></pre></td></tr></table></figure></p><h3 id="在上角添加fork-me-on-github"><a href="#在上角添加fork-me-on-github" class="headerlink" title="在上角添加fork me on github"></a>在上角添加<code>fork me on github</code></h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/hexo_fork_me_on_github.png" alt="fork me"><br>提供两个获取样式的站点，<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">GitHub Ribbons</a>和<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a><br>考虑到适配移动端适配，重叠于菜单按钮，我取的是 GitHub Corners 的右上角的样式。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 https://your-url 、fill:#151513; 和 color:#fff;</span></span><br><span class="line">&lt;a href=<span class="string">"https://your-url"</span> class=<span class="string">"github-corner"</span> aria-label=<span class="string">"View source on Github"</span>&gt;&lt;svg width=<span class="string">"80"</span> height=<span class="string">"80"</span> viewBox=<span class="string">"0 0 250 250"</span> style=<span class="string">"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;path d=<span class="string">"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"</span> fill=<span class="string">"currentColor"</span> style=<span class="string">"transform-origin: 130px 106px;"</span> class=<span class="string">"octo-arm"</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"</span> fill=<span class="string">"currentColor"</span> class=<span class="string">"octo-body"</span>&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>粘贴样式代码至 <code>themes/next/layout/_layout.swig</code> 文件中<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下。</p><h2 id="NexT-主题第三方服务接入"><a href="#NexT-主题第三方服务接入" class="headerlink" title="NexT 主题第三方服务接入"></a>NexT 主题第三方服务接入</h2><h3 id="Jiathis，网站社会化工具。"><a href="#Jiathis，网站社会化工具。" class="headerlink" title="Jiathis，网站社会化工具。"></a><a href="http://www.jiathis.com/" target="_blank" rel="noopener">Jiathis</a>，网站社会化工具。</h3><p>注册 JiaThis，获取 uid。<br><img src="http://oxwk2uou0.bkt.clouddn.com/hexo_jiathis.png" alt="注册JiaThis"><br>配置主题配置文件 JiaThis。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Share</span></span><br><span class="line"><span class="comment"># This plugin is more useful in China, make sure you known how to use it.</span></span><br><span class="line"><span class="comment"># And you can find the use guide at official webiste: http://www.jiathis.com/.</span></span><br><span class="line"><span class="comment"># Warning: JiaThis does not support https.</span></span><br><span class="line">jiathis:</span><br><span class="line">    <span class="comment">#Get this uid from http://www.jiathis.com/</span></span><br><span class="line">    uid: xxxxxx</span><br></pre></td></tr></table></figure></p><h3 id="不蒜子，网站计数。"><a href="#不蒜子，网站计数。" class="headerlink" title="不蒜子，网站计数。"></a><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a>，网站计数。</h3><p>详细<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">文档</a>，配置好主题配置文件即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="literal">true</span></span><br><span class="line">  site_uv_header: &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="literal">true</span></span><br><span class="line">  site_pv_header: &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="literal">true</span></span><br><span class="line">  page_pv_header: &lt;i class=<span class="string">"fa fa-file-o"</span>&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure></p><h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a><a href="https://valine.js.org" target="_blank" rel="noopener">Valine</a></h3><p><code>Valine</code>是一款基于<a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a>的快速、简洁且高效的无后端评论系统。可以查看详细的 <a href="https://valine.js.org" target="_blank" rel="noopener">Valine 文档</a>。</p><h3 id="七牛云，作为文章图片对象存储。"><a href="#七牛云，作为文章图片对象存储。" class="headerlink" title="七牛云，作为文章图片对象存储。"></a><a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云</a>，作为文章图片对象存储。</h3><p>考虑到便于迁移博客，图床必须要，七牛访问速度快，支持日志，防盗链和水印。<br>免费用户有<code>10GB流量/每月</code>+<code>总空间10GB</code>+<code>PUT/DELETE 10万请求</code>+<code>GET 100万请求</code>，对于个人主页足够了，另外，可以邀请好友获得奖励。这是我的<a href="https://portal.qiniu.com/signup?code=3ljo5qrunzqz6" target="_blank" rel="noopener">邀请</a>：）</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;div class=&quot;note success&quot;&gt;&lt;/div&gt; –&amp;gt;
&lt;!-- default
primary
success
info
warning
danger --&gt;
&lt;p&gt;&lt;img src=&quot;http://oxwk2uou0.bkt.clouddn.com/hexo_ZMcLVBi9xx4.jpg&quot; class=&quot;full-image&quot;&gt;&lt;br&gt;简谈 NexT 主题的配置和第三方的服务的接入。&lt;br&gt;
    
    </summary>
    
      <category term="tutorial" scheme="http://grackanil.top/categories/tutorial/"/>
    
    
      <category term="hexo" scheme="http://grackanil.top/tags/hexo/"/>
    
      <category term="tutorial" scheme="http://grackanil.top/tags/tutorial/"/>
    
  </entry>
  
  <entry>
    <title>静态网站托管服务平台</title>
    <link href="http://grackanil.top/2018/01/03/static-site-hosting-service/"/>
    <id>http://grackanil.top/2018/01/03/static-site-hosting-service/</id>
    <published>2018-01-03T03:55:37.000Z</published>
    <updated>2018-01-03T13:27:45.182Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oxwk2uou0.bkt.clouddn.com/hexo_Just%20magic.jpg" class="full-image"><br>简要罗列静态网站托管平台。<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近使用<code>Hexo</code>和<code>GitHub Pages</code>搭建个人静态主页，发现一些问题，遂做一个横向方案比较，了解一下具体的异同。有很多平台没有亲自实践，所以说明仅供记录参考，细节有待挖掘和更新。同时，如果您有其他推荐的方案，欢迎评论分享，持续更新：)</p><h2 id="GitHub-Pages-被设计为直接来源于GitHub仓库的个人、组织或项目主页。"><a href="#GitHub-Pages-被设计为直接来源于GitHub仓库的个人、组织或项目主页。" class="headerlink" title="GitHub Pages 被设计为直接来源于GitHub仓库的个人、组织或项目主页。"></a><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> 被设计为直接来源于<code>GitHub</code>仓库的个人、组织或项目主页。</h2><ul><li>提供静态网站托管服务</li><li>不支持服务端代码，比如 PHP、Ruby 或 Python</li><li>GitHub Pages 提供的域名可以支持 HTTPS 访问</li><li>可以配置自定义的域名，但是无法给自定义的域名配置 SSL ，<code>HTTPS is not supported for GitHub Pages using custom domains.</code></li><li>响应速度还是有点慢</li><li>网站仓库小于<code>1GB</code>，带宽限制 <code>100GB/每月</code>，构建限制<code>10次/每小时</code></li></ul><h2 id="Netlify"><a href="#Netlify" class="headerlink" title="Netlify"></a><a href="https://www.netlify.com/" target="_blank" rel="noopener">Netlify</a></h2><ul><li>不支持后台逻辑运算能力的网页</li><li>如果要部署 Hexo 大体思路是，通过 CLI (命令行界面)将 md 渲染为静态网站，然后通过 git 部署到 Git 平台，然后使用 Netlify 的 webhook 自动抓取部署</li><li>具有全球CDN、持续部署、一键HTTPS等优势</li><li>能通过客户端 JS 与可重用 API 可以带来动态功能，炫酷。</li><li>可以使用 Hugo 静态网站生成器和 Hetlify 网站自动化系统配合，以解决 Github Pages 的不支持 HTTPS 和 响应慢的问题</li></ul><h2 id="Coding-Pages-由国内-Coding-提供"><a href="#Coding-Pages-由国内-Coding-提供" class="headerlink" title="Coding Pages 由国内 Coding 提供"></a><a href="https://coding.net/pages/" target="_blank" rel="noopener">Coding Pages</a> 由国内 Coding 提供</h2><ul><li>访问速度友好</li><li>可以做 GitHub Pages 和 Coding Pages 同时部署 Hexo，然后通过域名 DNS 解析，国外访问 GitHub Pages ，国内 访问 Coding Pages， 以优化访问速度</li><li>可以免费绑定多个自定义域名</li><li>自定义域名可以享有免费 SSL 证书，全站支持 HTTPS 协议</li><li>更新代码库就可以自动部署。服务器稳定，香港服务器国外支持也友好</li><li>新增动态页面部署</li><li>有一个小问题是，网站首页如果不放置官方『Hosted by Coding Pages』的链接，会系统添加中间『Hosted by Coding Pages』页面。</li></ul><h2 id="GitLab-Pages-是由-GitLab-提供，旨在为-GitLab-工程、个人、groups-创建网站。"><a href="#GitLab-Pages-是由-GitLab-提供，旨在为-GitLab-工程、个人、groups-创建网站。" class="headerlink" title="GitLab Pages 是由 GitLab 提供，旨在为 GitLab 工程、个人、groups 创建网站。"></a><a href="https://about.gitlab.com/features/pages/" target="_blank" rel="noopener">GitLab Pages</a> 是由 GitLab 提供，旨在为 GitLab 工程、个人、groups 创建网站。</h2><ul><li>可以使用任何静态网站生成器，如 Jekyll、Middleman、Hexo、Hugo、Pelican等</li><li>可以配置自定义域名 HTTPS，需要的是上传证书</li></ul><h2 id="Now"><a href="#Now" class="headerlink" title="Now"></a><a href="https://zeit.co/now" target="_blank" rel="noopener">Now</a></h2><ul><li>不仅支持静态网站托管，也支持 JavaScript(Node.js) 或者 Docker 驱动的网站，</li><li>可以使用 CLI 或者链接 Git 仓库</li><li>支持自定义域名，开启 HTTPS</li><li>传输基于 HTTP/2</li><li>不需要安装 Git 等源代码控制工具，不需要设置 keys 或者 tokens</li><li>实时部署。</li></ul><h2 id="Firebase-Hosting"><a href="#Firebase-Hosting" class="headerlink" title="Firebase Hosting"></a><a href="https://www.firebase.com/docs/hosting/" target="_blank" rel="noopener">Firebase Hosting</a></h2><ul><li>只能 CLI</li><li>支持自定义域名并支持开启 HTTPS</li><li>支持重定向和重写。</li></ul><h2 id="Bitbucket-Cloud"><a href="#Bitbucket-Cloud" class="headerlink" title="Bitbucket Cloud"></a><a href="https://confluence.atlassian.com/bitbucket/publishing-a-website-on-bitbucket-cloud-221449776.html" target="_blank" rel="noopener">Bitbucket Cloud</a></h2><ul><li>必须要通过 HTTPS 访问</li><li>不能自定义域名</li><li>所有项目的静态网站代码都只能放在专门的站点仓库里。</li><li>页面缓存 15 分钟，意味着改变不会立即可见。</li></ul><h2 id="aerobatic"><a href="#aerobatic" class="headerlink" title="aerobatic"></a><a href="https://www.aerobatic.com/" target="_blank" rel="noopener">aerobatic</a></h2><ul><li>可以支持 CLI 上传代码</li><li>自定义域名需要收费。</li></ul><h2 id="surge"><a href="#surge" class="headerlink" title="surge"></a><a href="https://surge.sh/" target="_blank" rel="noopener">surge</a></h2><ul><li>只支持 CLI</li><li>支持自定义域名，开启 SSL 是需要收费，同时需要自己上传证书</li></ul><blockquote><p>持续更新…</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxwk2uou0.bkt.clouddn.com/hexo_Just%20magic.jpg&quot; class=&quot;full-image&quot;&gt;&lt;br&gt;简要罗列静态网站托管平台。&lt;br&gt;
    
    </summary>
    
    
      <category term="static site" scheme="http://grackanil.top/tags/static-site/"/>
    
      <category term="comparision" scheme="http://grackanil.top/tags/comparision/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Tutorial - 基本搭建和配置</title>
    <link href="http://grackanil.top/2017/12/29/hexo-tutorial/"/>
    <id>http://grackanil.top/2017/12/29/hexo-tutorial/</id>
    <published>2017-12-29T11:42:09.221Z</published>
    <updated>2018-01-01T15:48:00.544Z</updated>
    
    <content type="html"><![CDATA[<!-- <div class="note success"></div> –&gt;<!-- defaultprimarysuccessinfowarningdanger --><p><img src="http://oxwk2uou0.bkt.clouddn.com/Taipei%20in%20a%20Nutshell.jpg" class="full-image"><br>记录一次 Hexo 从零开始搭建的历程。<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很早就了解到可以通过 GitHub 托管静态网页，使用 Hexo 和 GitHub Pages 方便快捷地搭建个人博客网站，也一直想通过一种方式整理和管理知识，遂从零开始搭建、配置属于自己的博客网站。</p><h2 id="注册-GitHub"><a href="#注册-GitHub" class="headerlink" title="注册 GitHub"></a>注册 GitHub</h2><p><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> 是一个面向开源及私有软件项目的托管平台。最好最详细的教程是 <a href="https://guides.github.com/activities/hello-world/" target="_blank" rel="noopener">官方文档</a> 望多查阅。以下是我简要说明，有错误还望指正包涵。</p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_login.png" alt="GitHub Register"></p><h3 id="验证邮箱"><a href="#验证邮箱" class="headerlink" title="验证邮箱"></a>验证邮箱</h3><p>登录注册邮箱，验证账号。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_login_5.png" alt="验证邮箱"></p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_login_3.png" alt="创建仓库"><br><img src="http://oxwk2uou0.bkt.clouddn.com/github_login_4.png" alt="创建完成"></p><h3 id="通过-SSH-建立连接，详见-文档-，使用-SSH-协议，每次访问可以无需用户名和密码连接-GitHub-。"><a href="#通过-SSH-建立连接，详见-文档-，使用-SSH-协议，每次访问可以无需用户名和密码连接-GitHub-。" class="headerlink" title="通过 SSH 建立连接，详见 文档 ，使用 SSH 协议，每次访问可以无需用户名和密码连接 GitHub 。"></a>通过 SSH 建立连接，详见 <a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="noopener">文档</a> ，使用 SSH 协议，每次访问可以无需用户名和密码连接 GitHub 。</h3><h4 id="检查是否已经存在-SSH-keys"><a href="#检查是否已经存在-SSH-keys" class="headerlink" title="检查是否已经存在 SSH keys"></a>检查是否已经存在 SSH keys</h4><p>打开终端，使用<code>ls -al ~/.ssh</code>查看，如果在<code>.ssh</code>目录下存在文件列表，说明已经存在 SSH keys 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al ~/.ssh</span><br><span class="line">total 24</span><br><span class="line">drwx------    5 gekang  staff   160  9 26 10:03 .</span><br><span class="line">drwxr-xr-x+ 115 gekang  staff  3680 12 31 14:04 ..</span><br><span class="line">-rw-------    1 gekang  staff  1675  9  8 19:59 id_rsa</span><br><span class="line">-rw-------    1 gekang  staff   398  9  8 19:59 id_rsa.pub</span><br><span class="line">-rw-r--r--    1 gekang  staff  2178 12 27 23:30 known_hosts</span><br></pre></td></tr></table></figure></p><h4 id="如果没有-public-key-，生成-SSH；如果已经有了，直接配置即可"><a href="#如果没有-public-key-，生成-SSH；如果已经有了，直接配置即可" class="headerlink" title="如果没有 public key ，生成 SSH；如果已经有了，直接配置即可"></a>如果没有 public key ，生成 SSH；如果已经有了，直接配置即可</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen -t rsa -C "yourmail@xxx.com"</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">&lt;!-- 直接输入回车即可 --&gt;</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):</span><br></pre></td></tr></table></figure><p>要求输入密码，可以一路回车。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:Kf8+luLAnbCkfUxraCX88K9x4WJHqym+WItUPr5sr yourmail@xxx.com</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|                 |</span></span><br><span class="line"><span class="string">|    o +          |</span></span><br><span class="line"><span class="string">|   . B . .       |</span></span><br><span class="line"><span class="string">|  + o X S        |</span></span><br><span class="line"><span class="string">|  .* S @ o       |</span></span><br><span class="line"><span class="string">| .o.= @ O  .     |</span></span><br><span class="line"><span class="string">| o+B = =..+      |</span></span><br><span class="line"><span class="string">|.+E+. ...+o.     |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure></p><h4 id="配置-SSH"><a href="#配置-SSH" class="headerlink" title="配置 SSH"></a>配置 SSH</h4><ul><li>找到 id_rsa.pub 中的 public key ，位置如上路径，复制出 public key。<br>复制 public key 时，不要重起一行，添加空格，可以使用<code>pbcopy &lt; ~/.ssh/id_rsa.pub</code>复制到剪贴板</li><li>进入 GitHub Setting 页面，配置 SSH。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_ssh_3.png" alt="配置SSH"></li><li>创建 SSH ，title 任意输入，粘贴 public key ，然后 Add SSH key。</li></ul><h4 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>可能看到警告：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (IP ADDRESS)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>或<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (IP ADDRESS)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>验证 fingerprint ,然后 type yes<br>然后，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not</span></span><br><span class="line"><span class="string">provide shell access.</span></span><br></pre></td></tr></table></figure></p><h2 id="简述-GitHub-Pages"><a href="#简述-GitHub-Pages" class="headerlink" title="简述 GitHub Pages"></a>简述 GitHub Pages</h2><p><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>是 GitHub 提供的一个静态网站托管服务。同样，<a href="https://help.github.com/categories/github-pages-basics/" target="_blank" rel="noopener">官方文档</a>是最好的教程。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_1.png" alt="官网首页"></p><h3 id="GitHub-Pages-可以用为两种类型：用户或组织主页；项目工程主页。"><a href="#GitHub-Pages-可以用为两种类型：用户或组织主页；项目工程主页。" class="headerlink" title="GitHub Pages 可以用为两种类型：用户或组织主页；项目工程主页。"></a>GitHub Pages 可以用为两种类型：用户或组织主页；项目工程主页。</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_7.png" alt="类型"></p><h3 id="搭建个人主页，以username-github-io名创建仓库"><a href="#搭建个人主页，以username-github-io名创建仓库" class="headerlink" title="搭建个人主页，以username.github.io名创建仓库"></a>搭建个人主页，以<code>username.github.io</code>名创建仓库</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_2.png" alt="搭建个人主页"></p><h3 id="克隆仓库到本地"><a href="#克隆仓库到本地" class="headerlink" title="克隆仓库到本地"></a>克隆仓库到本地</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_3.png" alt="克隆仓库"></p><h3 id="本地编辑个人静态主页"><a href="#本地编辑个人静态主页" class="headerlink" title="本地编辑个人静态主页"></a>本地编辑个人静态主页</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_4.png" alt="克隆仓库"></p><h3 id="Push-到远程仓库。"><a href="#Push-到远程仓库。" class="headerlink" title="Push 到远程仓库。"></a>Push 到远程仓库。</h3><p>此处说明，若使用 SSH ，创建 GitHub 已建立 SSH 连接，可以直接 Push；若无，建立连接，或者使用 Https 推送到远程仓库，其间需要输入用户名和密码。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_5.png" alt="克隆仓库"></p><h3 id="以上若都成功，访问个人主页，https-username-github-io"><a href="#以上若都成功，访问个人主页，https-username-github-io" class="headerlink" title="以上若都成功，访问个人主页，https://username.github.io."></a>以上若都成功，访问个人主页，<code>https://username.github.io.</code></h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_pages_6.png" alt="克隆仓库"></p><h2 id="域名注册、绑定"><a href="#域名注册、绑定" class="headerlink" title="域名注册、绑定"></a>域名注册、绑定</h2><p>我的个人主页是万网注册的域名，所以简述<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">万网</a>域名购买和绑定。同样也有很详细的<a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/" target="_blank" rel="noopener">文档</a></p><h3 id="注册登录阿里云"><a href="#注册登录阿里云" class="headerlink" title="注册登录阿里云"></a>注册登录<a href="https://www.aliyun.com" target="_blank" rel="noopener">阿里云</a></h3><h3 id="购买域名，进入控制中心"><a href="#购买域名，进入控制中心" class="headerlink" title="购买域名，进入控制中心"></a>购买域名，进入控制中心</h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/github_domain_name.png" alt="控制中心"></p><h3 id="管理域名，添加域名解析"><a href="#管理域名，添加域名解析" class="headerlink" title="管理域名，添加域名解析"></a>管理域名，添加域名解析</h3><p>GitHub 推荐使用 www 的二级域名，给域名添加解析，记录类型都是 A 记录，记录值全部对应刚才 ping 出来的 IP 。<br><img src="http://oxwk2uou0.bkt.clouddn.com/github_cname.png" alt="设置域名解析"></p><h3 id="添加CNAME文件到github仓库"><a href="#添加CNAME文件到github仓库" class="headerlink" title="添加CNAME文件到github仓库"></a>添加CNAME文件到github仓库</h3><p>由于<code>hexo d</code>部署时，依据<code>.gitignore</code>文件，会清除所有文件，所以如要将 CNAME 部署到 GitHub 中，必须将 CNAME 放置 source 文件夹中（可以放在后面 Hexo 安装后，初始化项目中 source 目录下）。CNAME 文件中是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 域名为grackanil.top</span></span><br><span class="line"><span class="comment"># 二级域名</span></span><br><span class="line">www.grackanil.top</span><br><span class="line"><span class="comment"># 一级域名</span></span><br><span class="line">grackanil.top</span><br></pre></td></tr></table></figure></p><h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>安装 Hexo 相当简单。<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a></p><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><h4 id="如果安装了-Node-js-和-Git，只需要使用-npm-即可完成-Hexo-的安装"><a href="#如果安装了-Node-js-和-Git，只需要使用-npm-即可完成-Hexo-的安装" class="headerlink" title="如果安装了 Node.js 和 Git，只需要使用 npm 即可完成 Hexo 的安装"></a>如果安装了 <code>Node.js</code> 和 <code>Git</code>，只需要使用 <code>npm</code> 即可完成 <code>Hexo</code> 的安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="如果没有安装-Node-js-和-Git，以下均为-Mac-环境下。"><a href="#如果没有安装-Node-js-和-Git，以下均为-Mac-环境下。" class="headerlink" title="如果没有安装 Node.js 和 Git，以下均为 Mac 环境下。"></a>如果没有安装 <code>Node.js</code> 和 <code>Git</code>，以下均为 Mac 环境下。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 brew 安装 git</span></span><br><span class="line">brew install git</span><br><span class="line"><span class="comment"># 可以使用 cURL 安装 nvm</span></span><br><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class="line"><span class="comment"># 也可以 使用 Wget 安装 nvm</span></span><br><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br><span class="line"><span class="comment"># 使用最佳安装方式：nvm 安装 Node.js</span></span><br><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化-Hexo-建站"><a href="#初始化-Hexo-建站" class="headerlink" title="初始化 Hexo 建站"></a>初始化 Hexo 建站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化 Hexo，会在目标文件夹建立网站所需要的所有文件</span></span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">$ npm install</span><br><span class="line"><span class="comment"># 查看项目第一层目录</span></span><br><span class="line">$ tree -L 1</span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">├── themes</span><br><span class="line">└── yarn.lock</span><br><span class="line"><span class="comment"># 更改后清除静态文件夹的内容并删掉</span></span><br><span class="line">$ hexo clean </span><br><span class="line"><span class="comment"># 本地启动服务</span></span><br><span class="line"><span class="comment"># hexo generate ，生成静态文件到 public 文件夹</span></span><br><span class="line">$ hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">...</span><br><span class="line">INFO  Generated: 2018/01/01/hello-world/index.html</span><br><span class="line">INFO  28 files generated <span class="keyword">in</span> 916 ms</span><br><span class="line"><span class="comment"># hexo server，在本地服务器运行</span></span><br><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><h3 id="访问-http-localhost-4000"><a href="#访问-http-localhost-4000" class="headerlink" title="访问 http://localhost:4000/"></a>访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></h3><p><img src="http://oxwk2uou0.bkt.clouddn.com/hexo_1.png" alt="预览"></p><h3 id="部署到-GitHub，前提是已经注册-GitHub，创建-username-github-io-仓库"><a href="#部署到-GitHub，前提是已经注册-GitHub，创建-username-github-io-仓库" class="headerlink" title="部署到 GitHub，前提是已经注册 GitHub，创建 username.github.io 仓库"></a>部署到 GitHub，前提是已经注册 <code>GitHub</code>，创建 <code>username.github.io</code> 仓库</h3><h4 id="安装-GitHub-依赖插件"><a href="#安装-GitHub-依赖插件" class="headerlink" title="安装 GitHub 依赖插件"></a>安装 GitHub 依赖插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="配置更目录下的-config-yml文件"><a href="#配置更目录下的-config-yml文件" class="headerlink" title="配置更目录下的 _config.yml文件"></a>配置更目录下的 <code>_config.yml</code>文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: ssh://git@github.com/grackanil/grackanil.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="部署命令"><a href="#部署命令" class="headerlink" title="部署命令"></a>部署命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署，hexo deploy</span></span><br><span class="line">$ hexo d</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h3 id="访问个人主页"><a href="#访问个人主页" class="headerlink" title="访问个人主页"></a>访问个人主页</h3><p>访问 username.github.io，如 grackanil.github.io，根目录 <code>source</code> 下已经创建<code>CNAME</code>，绑定自定义域名，可以访问域名。</p><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>Hexo 安装主题很方便，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。以安装NexT为例，可以访问<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT主题文档</a>。</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入站点目录</span></span><br><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line"><span class="comment"># checkout 代码</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="修改站点配置目录"><a href="#修改站点配置目录" class="headerlink" title="修改站点配置目录"></a>修改站点配置目录</h3><p>根目录下的<code>站点配置文件</code> <strong>config.yml，区别于主题目录下的<code>主题配置文件</code></strong>config.yml。启动主题<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>使用 <code>hexo clean</code> 来清除 Hexo 的缓存，启动服务 <code>hexo s --debug</code>，待成功后，访问<code>http://localhost:4000</code></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>至此，简单的 NexT 默认配置主题的 Hexo 静态个人主页就搭建完成了。</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;div class=&quot;note success&quot;&gt;&lt;/div&gt; –&amp;gt;
&lt;!-- default
primary
success
info
warning
danger --&gt;
&lt;p&gt;&lt;img src=&quot;http://oxwk2uou0.bkt.clouddn.com/Taipei%20in%20a%20Nutshell.jpg&quot; class=&quot;full-image&quot;&gt;&lt;br&gt;记录一次 Hexo 从零开始搭建的历程。&lt;br&gt;
    
    </summary>
    
      <category term="tutorial" scheme="http://grackanil.top/categories/tutorial/"/>
    
    
      <category term="hexo" scheme="http://grackanil.top/tags/hexo/"/>
    
      <category term="tutorial" scheme="http://grackanil.top/tags/tutorial/"/>
    
  </entry>
  
</feed>
